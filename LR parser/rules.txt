S' -> Program
Program -> Program Function
Program -> Program StmtExpr
Program -> ''
Function -> ID ( Params ) { Body }
Params -> ID , Params
Params -> ID
Params -> ''
Body -> StmtList
StmtList -> Stmt StmtList
StmtList -> ''
Stmt -> StmtReturn
Stmt -> StmtIf
Stmt -> StmtWhile
Stmt -> StmtExpr
Stmt -> Block
StmtReturn -> RETURN Expr ;
StmtIf -> IF ( Expr ) Stmt ELSE Stmt
StmtIf -> IF ( Expr ) Stmt
StmtWhile -> WHILE ( Expr ) Stmt
StmtExpr -> Expr ;
Block -> { StmtList }
Expr -> ExprOr
ExprOr -> ExprOr OR ExprAnd
ExprOr -> ExprAnd
ExprAnd -> ExprAnd AND ExprEq
ExprAnd -> ExprEq
ExprEq -> ExprEq EQ ExprAdd
ExprEq -> ExprEq NEQ ExprAdd
ExprEq -> ExprEq LT ExprAdd
ExprEq -> ExprEq GT ExprAdd
ExprEq -> ExprEq LE ExprAdd
ExprEq -> ExprEq GE ExprAdd
ExprEq -> ExprAdd
ExprAdd -> ExprAdd PLUS ExprMul
ExprAdd -> ExprAdd MINUS ExprMul
ExprAdd -> ExprMul
ExprMul -> ExprMul TIMES ExprUnary
ExprMul -> ExprMul DIVIDE ExprUnary
ExprMul -> ExprUnary
ExprUnary -> NOT ExprUnary
ExprUnary -> MINUS ExprUnary
ExprUnary -> ExprPrimary
ExprPrimary -> TRUE
ExprPrimary -> FALSE
ExprPrimary -> NUMBER
ExprPrimary -> ID
ExprPrimary -> ID ( FuncArgs )
ExprPrimary -> ( Expr )
FuncArgs -> Expr , FuncArgs
FuncArgs -> Expr
FuncArgs -> ''